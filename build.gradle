buildscript {
    repositories {
        mavenCentral()
        maven {
          url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
      classpath "io.github.gradle-nexus:publish-plugin:1.0.0"
    }
}

apply plugin: io.eventuate.plugins.gradle.publish.EventuatePublishPlugin

allprojects {
    group = "io.eventuate.plugins.gradle"

    apply plugin: "groovy"

    subprojects { project ->
        java {
            toolchain {
                languageVersion.set(JavaLanguageVersion.of(17));
            }
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation gradleApi()
        implementation localGroovy()
        testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
        testImplementation "org.mockito:mockito-core:4.11.0"
    }

}

def testRepoDir = "${rootProject.buildDir}/testdeploy"
def testRepoUrl="file://$testRepoDir"

task deleteTestRepo(type: Delete) {
    delete testRepoDir
}


task publishTestLibraryProject(type: GradleBuild) {
    dependsOn(deleteTestRepo)
    dir = file('test-library-project')
    tasks = ['publish']
    startParameter.projectProperties = [deployUrl: testRepoUrl]
}

task buildTestClient(type: GradleBuild) {
    dependsOn(publishTestLibraryProject)
    dir = file('test-client-project')
    tasks = ['assemble']
    startParameter.refreshDependencies = true
    startParameter.projectProperties = [repoUrl: testRepoUrl]
}

check.dependsOn(buildTestClient)
tasks.withType(Test).configureEach {
    useJUnitPlatform()
}


